"""Initial database schema

Revision ID: 8abb08f4511e
Revises: 
Create Date: 2025-09-26 04:51:31.685888

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8abb08f4511e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('backtest_jobs',
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('params', sa.JSON(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', name='backteststatus'), nullable=True),
    sa.Column('progress', sa.Float(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('job_id')
    )
    op.create_index('idx_backtest_jobs_created', 'backtest_jobs', ['created_at'], unique=False)
    op.create_index('idx_backtest_jobs_status', 'backtest_jobs', ['status'], unique=False)
    op.create_table('symbols',
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('exchange', sa.String(length=10), nullable=False),
    sa.Column('sector', sa.String(length=100), nullable=True),
    sa.Column('lot_size', sa.Integer(), nullable=True),
    sa.Column('tick_size', sa.Float(), nullable=True),
    sa.Column('is_shortable', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('symbol')
    )
    op.create_index(op.f('ix_symbols_symbol'), 'symbols', ['symbol'], unique=False)
    op.create_table('backtest_results',
    sa.Column('result_id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('total_trades', sa.Integer(), nullable=True),
    sa.Column('winning_trades', sa.Integer(), nullable=True),
    sa.Column('losing_trades', sa.Integer(), nullable=True),
    sa.Column('win_rate', sa.Float(), nullable=True),
    sa.Column('total_pnl', sa.Float(), nullable=True),
    sa.Column('average_pnl', sa.Float(), nullable=True),
    sa.Column('median_pnl', sa.Float(), nullable=True),
    sa.Column('max_profit', sa.Float(), nullable=True),
    sa.Column('max_loss', sa.Float(), nullable=True),
    sa.Column('max_drawdown', sa.Float(), nullable=True),
    sa.Column('sharpe_ratio', sa.Float(), nullable=True),
    sa.Column('average_hold_days', sa.Float(), nullable=True),
    sa.Column('median_hold_days', sa.Float(), nullable=True),
    sa.Column('max_hold_days', sa.Integer(), nullable=True),
    sa.Column('detailed_results', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['backtest_jobs.job_id'], ),
    sa.PrimaryKeyConstraint('result_id')
    )
    op.create_table('pairs',
    sa.Column('pair_id', sa.UUID(), nullable=False),
    sa.Column('symbol_a', sa.String(length=20), nullable=False),
    sa.Column('symbol_b', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['symbol_a'], ['symbols.symbol'], ),
    sa.ForeignKeyConstraint(['symbol_b'], ['symbols.symbol'], ),
    sa.PrimaryKeyConstraint('pair_id')
    )
    op.create_index('idx_pairs_enabled', 'pairs', ['enabled'], unique=False)
    op.create_index('idx_pairs_symbols', 'pairs', ['symbol_a', 'symbol_b'], unique=False)
    op.create_index(op.f('ix_pairs_pair_id'), 'pairs', ['pair_id'], unique=False)
    op.create_table('alert_rules',
    sa.Column('rule_id', sa.UUID(), nullable=False),
    sa.Column('pair_id', sa.UUID(), nullable=False),
    sa.Column('timeframe', sa.Enum('MINUTE_1', 'MINUTE_5', 'MINUTE_15', 'MINUTE_30', 'HOUR_1', 'HOUR_4', 'DAY_1', name='timeframe'), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('params', sa.JSON(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pair_id'], ['pairs.pair_id'], ),
    sa.PrimaryKeyConstraint('rule_id')
    )
    op.create_index('idx_alert_rules_enabled', 'alert_rules', ['enabled'], unique=False)
    op.create_index('idx_alert_rules_pair_tf', 'alert_rules', ['pair_id', 'timeframe'], unique=False)
    op.create_table('pair_states',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('pair_id', sa.UUID(), nullable=False),
    sa.Column('timeframe', sa.Enum('MINUTE_1', 'MINUTE_5', 'MINUTE_15', 'MINUTE_30', 'HOUR_1', 'HOUR_4', 'DAY_1', name='timeframe'), nullable=False),
    sa.Column('z_score', sa.Float(), nullable=True),
    sa.Column('beta', sa.Float(), nullable=True),
    sa.Column('correlation', sa.Float(), nullable=True),
    sa.Column('half_life', sa.Float(), nullable=True),
    sa.Column('price_a', sa.Float(), nullable=True),
    sa.Column('price_b', sa.Float(), nullable=True),
    sa.Column('spread', sa.Float(), nullable=True),
    sa.Column('lookback_periods', sa.Integer(), nullable=True),
    sa.Column('calculated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pair_id'], ['pairs.pair_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_pair_states_pair_tf', 'pair_states', ['pair_id', 'timeframe'], unique=False)
    op.create_index('idx_pair_states_updated', 'pair_states', ['updated_at'], unique=False)
    op.create_table('alerts',
    sa.Column('alert_id', sa.UUID(), nullable=False),
    sa.Column('pair_id', sa.UUID(), nullable=False),
    sa.Column('rule_id', sa.UUID(), nullable=False),
    sa.Column('timeframe', sa.Enum('MINUTE_1', 'MINUTE_5', 'MINUTE_15', 'MINUTE_30', 'HOUR_1', 'HOUR_4', 'DAY_1', name='timeframe'), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('alert_type', sa.String(length=50), nullable=True),
    sa.Column('z_score', sa.Float(), nullable=True),
    sa.Column('beta', sa.Float(), nullable=True),
    sa.Column('correlation', sa.Float(), nullable=True),
    sa.Column('price_a', sa.Float(), nullable=True),
    sa.Column('price_b', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'TRIGGERED', 'EXPIRED', name='alertstatus'), nullable=True),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('delivery_channels', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pair_id'], ['pairs.pair_id'], ),
    sa.ForeignKeyConstraint(['rule_id'], ['alert_rules.rule_id'], ),
    sa.PrimaryKeyConstraint('alert_id')
    )
    op.create_index('idx_alerts_pair_created', 'alerts', ['pair_id', 'created_at'], unique=False)
    op.create_index('idx_alerts_status', 'alerts', ['status'], unique=False)
    op.create_index('idx_alerts_type', 'alerts', ['alert_type'], unique=False)
    op.create_index(op.f('ix_alerts_created_at'), 'alerts', ['created_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_alerts_created_at'), table_name='alerts')
    op.drop_index('idx_alerts_type', table_name='alerts')
    op.drop_index('idx_alerts_status', table_name='alerts')
    op.drop_index('idx_alerts_pair_created', table_name='alerts')
    op.drop_table('alerts')
    op.drop_index('idx_pair_states_updated', table_name='pair_states')
    op.drop_index('idx_pair_states_pair_tf', table_name='pair_states')
    op.drop_table('pair_states')
    op.drop_index('idx_alert_rules_pair_tf', table_name='alert_rules')
    op.drop_index('idx_alert_rules_enabled', table_name='alert_rules')
    op.drop_table('alert_rules')
    op.drop_index(op.f('ix_pairs_pair_id'), table_name='pairs')
    op.drop_index('idx_pairs_symbols', table_name='pairs')
    op.drop_index('idx_pairs_enabled', table_name='pairs')
    op.drop_table('pairs')
    op.drop_table('backtest_results')
    op.drop_index(op.f('ix_symbols_symbol'), table_name='symbols')
    op.drop_table('symbols')
    op.drop_index('idx_backtest_jobs_status', table_name='backtest_jobs')
    op.drop_index('idx_backtest_jobs_created', table_name='backtest_jobs')
    op.drop_table('backtest_jobs')
    # ### end Alembic commands ###
